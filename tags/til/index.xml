<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on B.log</title>
    <link>https://haneunbi.github.io/tags/til/</link>
    <description>B.log (TIL)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 08 May 2020 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://haneunbi.github.io/tags/til/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Vue.js] Todo List 만들기</title>
      <link>https://haneunbi.github.io/2020/05/08/vue-todolist/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://haneunbi.github.io/2020/05/08/vue-todolist/</guid>
      <description>&lt;p&gt;Vue.js를 이용하여 Todo List를 만들었다.&lt;br&gt;
Vue나 React 배우기를 더 이상 미뤄서는 안될 것 같고 일단 html 템플릿을 그대로 활용하는 Vue가 익숙할 것 같아 Vue를 선택했다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Vue로 만든 Todo&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/haneunbi/vue-todolist&#34;  target=&#34;_blank&#34; &gt;GitHub Repo&lt;/a&gt; / &lt;a href=&#34;https://haneunbi.github.io/vue-todolist&#34;  target=&#34;_blank&#34; &gt;GitHub Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jQuery로 만든 Todo (이 형태를 기본으로 Vue로 변환)&lt;br&gt;
&lt;a href=&#34;https://github.com/haneunbi/todolist&#34;  target=&#34;_blank&#34; &gt;GitHub Repo&lt;/a&gt; / &lt;a href=&#34;https://haneunbi.github.io/todolist&#34;  target=&#34;_blank&#34; &gt;GitHub Page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;작업 내내 jQuery 타성에 젖어버린 나의 머릿속은 대체 왜 Vue를 써야 하는 건지 물음표 투성이었다.&lt;br&gt;
컴포넌트(Component)의 장점도 알겠고 별도 js 파일에서 분리 조작이 아닌 html 태그 내에서의 DOM 조작과 데이터 바인딩이 분명 흥미롭긴 한데 정말 효과적인지는 의문이다.&lt;br&gt;
컴포넌트 간 데이터 전달도 번거롭고 빌드도 해야하고.. 다 익숙하지 않은 탓이겠지.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;하위 컴포넌트 → &lt;strong&gt;event&lt;/strong&gt; → 상위 컴포넌트&lt;br&gt;
상위 컴포넌트 → &lt;strong&gt;props&lt;/strong&gt; → 하위 컴포넌트&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;그래도 오랜만에 새로움이 작동되는 희열을 느꼈다.&lt;br&gt;
(나도 코드 삽입해서 설명하고 싶은데 아직 스스로도 정리가 덜 돼서 회고에 가까운 기록으로 대체)&lt;/p&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kr.vuejs.org/v2/guide/index.html&#34;  target=&#34;_blank&#34; &gt;Vue.js 공식 문서&lt;/a&gt; (I ❤ 한글)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kr.vuejs.org/v2/examples/todomvc.html&#34;  target=&#34;_blank&#34; &gt;Vue.js 공식 문서 - Todo 예시&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>기술 블로그 시작하기</title>
      <link>https://haneunbi.github.io/2020/04/29/start-blog/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://haneunbi.github.io/2020/04/29/start-blog/</guid>
      <description>&lt;p&gt;기술 블로그를 만들어야지 싶어 몇년 전부터 *&lt;strong&gt;.github.io&lt;/strong&gt; 블로그를 만들었다 지웠다를 반복했다.&lt;/p&gt;
&lt;p&gt;기존 플랫폼은 이용하고 싶지 않아 깃허브(GitHub)를 이용한 정적 페이지를 만들기로는 정했는데 어떠한 블로그 프레임워크로 할 것인지는 정하지 못했다. 처음에는(2017년) 깃허브 블로그하면 가장 유명한 지킬(Jekyll)을 사용해서 만들어만 두었다. 그리고 잊고 있다가 다시금 생각나 알아보니 당시엔(2018년) 지킬보단 헥소(Hexo)가 뜨고있다하여(?) 바꿨다. 물론 이때도 만들어만 두고 사용은 안했다..😅&lt;/p&gt;
&lt;p&gt;그러다가 최근에(2020년) 다시 보니 휴고(Hugo)가 새롭게 등장해 있길래 혼자서 온갖 시행착오를 겪어가며 나름의 커스터마이징도 끝내놓고 보니 뷰프레스(VuePress)가 있다는 걸 알게 됐다. 안그래도 Vue를 공부해야지 하는 찰나에 쓰면 좋겠다 싶어서 또 다시 바꿔봤는데 이게 Hugo보다 속도가 느려서 당장 테스트 서버를 돌리는데도 답답하더라. 아무튼 다시 Hugo로 돌아왔고 이제부턴 방치하지 않고 시작해볼까 한다.&lt;/p&gt;
&lt;h2 id=&#34;회고&#34;&gt;회고&lt;/h2&gt;
&lt;p&gt;내가 아는 건 자바스크립트 정도에 CLI도 어색하고 각각의 베이스 언어들도 접해보지 않은 상태라 솔직히 하나하나 만들 때마다 헤맸다.
결과적으로 Go나 Vue의 컴포넌트 개념을 살짝 훑어봤고, 빠른 배포나 글쓰기를 위한 초간단 쉘 스크립트도 작성해보는 기회가 되었다.&lt;/p&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;  target=&#34;_blank&#34; &gt;Jekyll (Ruby)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hexo.io/ko/index.html&#34;  target=&#34;_blank&#34; &gt;Hexo (Node.js)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; &gt;Hugo (Go)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vuepress.vuejs.org/&#34;  target=&#34;_blank&#34; &gt;VuePress (Vue.js)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;  target=&#34;_blank&#34; &gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>